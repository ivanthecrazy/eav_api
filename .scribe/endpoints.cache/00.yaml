## Autogenerated by Scribe. DO NOT MODIFY.

name: Auth
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'The first name of the user.'
        required: true
        example: doloremque
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'The last name of the user.'
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: mcollins@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: h`~<5@
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      first_name: doloremque
      last_name: autem
      email: mcollins@example.org
      password: h`~<5@
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "User registered successfully",
            "user": {
              "id": 1,
              "first_name": "John",
              "last_name": "Doe",
              "email": "john.doe@example.com",
              "created_at": "2021-01-01 00:00:00",
            },
            "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9..."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Authenticate a user and return a token'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: amiya51@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: 'y]|qJ}YD]gyG3?EH[$Wo'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: amiya51@example.org
      password: 'y]|qJ}YD]gyG3?EH[$Wo'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "user": {
              "id": 1,
              "first_name": "John",
              "last_name": "Doe",
              "email": "john.doe@example.com",
              "created_at": "2021-01-01 00:00:00",
            },
            "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9..."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout user by revoking token'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Logged out successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer D53EV8h6adkeacbg64fZ1vP'
    controller: null
    method: null
    route: null
    custom: []
