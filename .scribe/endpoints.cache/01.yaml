## Autogenerated by Scribe. DO NOT MODIFY.

name: Projects
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/projects
    metadata:
      groupName: Projects
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a list of projects. Available for all users, but only returns projects assigned to the authenticated user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      per_page:
        name: per_page
        description: 'The number of projects to return per page.'
        required: false
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'filter[attribute_name_operation]':
        name: 'filter[attribute_name_operation]'
        description: 'The name of the attribute to filter by. Please note that operation is optional and it can be lt, gt, lte, gte, eq, like. For like use * for wildcards.'
        required: false
        example: recusandae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      per_page: 13
      'filter[attribute_name_operation]': recusandae
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Project 1",
                "status": 1,
                "created_at": "2025-01-01 12:00:00",
                "updated_at": "2025-01-01 12:00:00",
                "users": [
                  {
                    "id": 1,
                    "first_name": "John",
                    "last_name": "Doe",
                    "email": "user1@example.com",
                    "created_at": "2025-01-01 12:00:00",
                    "updated_at": "2025-01-01 12:00:00"
                  }
                ],
                "attribute_values": [
                  {
                    "id": 1,
                    "attribute_id": 1,
                    "entity_id": 1,
                    "value": "Value 1",
                    "created_at": "2025-01-01 12:00:00",
                    "updated_at": "2025-01-01 12:00:00",
                    "attribute_name": "department",
                    "attribute": {
                      "id": 1,
                      "name": "Attribute 1",
                      "type": "text"
                    }
                  }
                ]
              }
            ],
            "links": {
              "first": "https://eav.ivan-larionov.dev/api/projects?page=1",
              "last": "https://eav.ivan-larionov.dev/api/projects?page=1",
              "prev": null,
              "next": null
            },
            "first_page_url": "https://eav.ivan-larionov.dev/api/projects?page=1",
            "from": 1,
            "last_page": 1,
            "last_page_url": "https://eav.ivan-larionov.dev/api/projects?page=1",
            "next_page_url": null,
            "path": "https://eav.ivan-larionov.dev/api/projects",
            "per_page": 10,
            "prev_page_url": null,
            "to": 10,
            "total": 15
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 616ved3Zg5h4PDEbfVack8a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/projects
    metadata:
      groupName: Projects
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created project. Available for all users'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the project.'
        required: true
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status of the project.'
        required: true
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_ids:
        name: user_ids
        description: 'The IDs of the users to assign to the project.'
        required: true
        example:
          - illo
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      attributes:
        name: attributes
        description: 'The attributes of the project. Each array item must have a name of already existing attribute and value.'
        required: true
        example:
          - labore
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attributes[].name':
        name: 'attributes[].name'
        description: 'The <code>name</code> of an existing record in the attributes table.'
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attributes[].value':
        name: 'attributes[].value'
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: dolor
      status: 19
      user_ids:
        - illo
      attributes:
        - labore
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Project created successfully",
            "project": {
              "id": 1,
              "name": "Project 1",
              "status": 1,
              "created_at": "2025-01-01 12:00:00",
              "updated_at": "2025-01-01 12:00:00",
              "users": [
                {
                  "id": 1,
                  "first_name": "John",
                  "last_name": "Doe",
                  "email": "user1@example.com",
                  "created_at": "2025-01-01 12:00:00",
                  "updated_at": "2025-01-01 12:00:00"
                }
              ],
              "attribute_values": [
                {
                  "id": 1,
                  "attribute_id": 1,
                  "entity_id": 1,
                  "value": "Value 1",
                  "created_at": "2025-01-01 12:00:00",
                  "updated_at": "2025-01-01 12:00:00",
                  "attribute_name": "department",
                  "attribute": {
                    "id": 1,
                    "name": "Attribute 1",
                    "type": "text"
                  }
                }
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e48f6Eg6DVhkPvdab1a3Z5c'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/projects/{id}'
    metadata:
      groupName: Projects
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a specific project. Available only for projects assigned to the authenticated user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 14
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Project 1",
            "status": 1,
            "created_at": "2025-01-01 12:00:00",
            "updated_at": "2025-01-01 12:00:00",
            "users": [
              {
                "id": 1,
                "first_name": "John",
                "last_name": "Doe",
                "email": "user1@example.com",
                "created_at": "2025-01-01 12:00:00",
                "updated_at": "2025-01-01 12:00:00"
              }
            ],
            "attribute_values": [
              {
                "id": 1,
                "attribute_id": 1,
                "entity_id": 1,
                "value": "Value 1",
                "created_at": "2025-01-01 12:00:00",
                "updated_at": "2025-01-01 12:00:00",
                "attribute_name": "department",
                "attribute": {
                  "id": 1,
                  "name": "Attribute 1",
                  "type": "text"
                }
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer df6kP8Z4e3aacvbVDEh615g'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/projects/{id}'
    metadata:
      groupName: Projects
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a project. Available only for projects assigned to the authenticated user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 18
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: hwpboqzaavcjmj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      attributes:
        name: attributes
        description: ''
        required: false
        example: null
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attributes[].name':
        name: 'attributes[].name'
        description: 'The <code>name</code> of an existing record in the attributes table.'
        required: true
        example: saepe
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attributes[].value':
        name: 'attributes[].value'
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: hwpboqzaavcjmj
      status: 11
      attributes:
        -
          name: saepe
          value: aut
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Project updated successfully",
            "project": {
              "id": 1,
              "name": "Project 1",
              "status": 1,
              "created_at": "2025-01-01 12:00:00",
              "updated_at": "2025-01-01 12:00:00",
              "users": [
                {
                  "id": 1,
                  "first_name": "John",
                  "last_name": "Doe",
                  "email": "user1@example.com",
                  "created_at": "2025-01-01 12:00:00",
                  "updated_at": "2025-01-01 12:00:00"
                }
              ],
              "attribute_values": [
                {
                  "id": 1,
                  "attribute_id": 1,
                  "entity_id": 1,
                  "value": "Value 1",
                  "created_at": "2025-01-01 12:00:00",
                  "updated_at": "2025-01-01 12:00:00",
                  "attribute_name": "department",
                  "attribute": {
                    "id": 1,
                    "name": "Attribute 1",
                    "type": "text"
                  }
                }
              ]
            }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DVgb6dv58khe6Eac3fa14PZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/projects/{id}'
    metadata:
      groupName: Projects
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove a project. Available only for projects assigned to the authenticated user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Project deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer f6bkZ1ag64Dveha5PEV8c3d'
    controller: null
    method: null
    route: null
    custom: []
