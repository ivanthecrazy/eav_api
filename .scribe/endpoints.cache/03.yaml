## Autogenerated by Scribe. DO NOT MODIFY.

name: Attributes
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/attributes
    metadata:
      groupName: Attributes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a list of all attributes.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      per_page:
        name: per_page
        description: 'The number of attributes to return per page.'
        required: false
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      per_page: 11
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Attribute 1",
                "type": "string"
              }
            ],
            "links": {
              "first": "https://eav.ivan-larionov.dev/api/attributes?page=1",
              "last": "https://eav.ivan-larionov.dev/api/attributes?page=1",
              "prev": null,
              "next": null
            },
            "first_page_url": "https://eav.ivan-larionov.dev/api/attributes?page=1",
            "from": 1,
            "last_page": 1,
            "last_page_url": "https://eav.ivan-larionov.dev/api/attributes?page=1",
            "next_page_url": null,
            "path": "https://eav.ivan-larionov.dev/api/attributes",
            "per_page": 10,
            "prev_page_url": null,
            "to": 10,
            "total": 15
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vEge8ZaaVPk15fd466h3Dbc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/attributes
    metadata:
      groupName: Attributes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new attribute.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the attribute.'
        required: true
        example: temporibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'Type of the attribute (1 - text, 2 - date, 3 - number, 4 - select)'
        required: true
        example: 115.6
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: temporibus
      type: 115.6
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Attribute created successfully",
            "attribute": {
              "id": 1,
              "name": "Attribute 1",
              "type": "string"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5P8a41DEh6fdeVbvaZ6kc3g'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attributes/{id}'
    metadata:
      groupName: Attributes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a single attribute.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the attribute.'
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 13
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Attribute 1",
            "type": "string"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer c3dva5bhD61EeVkZaf8P4g6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/attributes/{id}'
    metadata:
      groupName: Attributes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an attribute.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the attribute.'
        required: true
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 8
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the attribute.'
        required: true
        example: tempora
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'Type of the attribute (1 - text, 2 - date, 3 - number, 4 - select)'
        required: true
        example: 7176759.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: tempora
      type: 7176759.0
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Attribute updated successfully",
            "attribute": {
              "id": 1,
              "name": "Attribute 1",
              "type": "string"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 14aP5b36VDaEhZ6dfv8cgek'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/attributes/{id}'
    metadata:
      groupName: Attributes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete an attribute.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the attribute.'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Attribute deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3avkgha6Zb5Ed41e6DfPV8c'
    controller: null
    method: null
    route: null
    custom: []
